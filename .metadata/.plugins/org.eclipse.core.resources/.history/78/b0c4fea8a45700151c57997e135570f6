package services;

import java.util.List;

import javax.enterprise.context.ApplicationScoped;
import javax.enterprise.context.SessionScoped;
import javax.enterprise.inject.Produces;
import javax.inject.Inject;
import javax.inject.Named;
import javax.persistence.EntityManager;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import org.jboss.tools.examples.model.Member;

import models.LoggedUser;
import models.Regdata;

//@ApplicationScoped
@SessionScoped
public class LoginValidate {

	@Inject
	private EntityManager em;

	@Inject
	@Named
	private Regdata regdata;

	@Inject
	private LoggedUser loggeduser;

	public Regdata findById(Long id) {
		return em.find(Regdata.class, id);
	}

	// Kontrola ci USER s danym menom sa uz nenachadza v databaze
	public boolean userExist(String login) {
		try {
			Regdata genres = em.createQuery("select c from Regdata c where c.login =:login", Regdata.class)
					.setParameter("login", login).getSingleResult();
			return true;
		} catch (Exception e) {
			System.out.println("userExist = false");
			return false;
		}
	}

	public boolean isRegistered(String login, String pass) {

		System.out.println(login);
		System.out.println(pass);
		//// login
		CriteriaBuilder cblog = em.getCriteriaBuilder();
		CriteriaQuery<Regdata> criterialog = cblog.createQuery(Regdata.class);
		Root<Regdata> memberlog = criterialog.from(Regdata.class);

		criterialog.select(memberlog).where(cblog.equal(memberlog.get("login"), login));
		//// password
		CriteriaBuilder cbpass = em.getCriteriaBuilder();
		CriteriaQuery<Regdata> criteriapass = cbpass.createQuery(Regdata.class);
		Root<Regdata> memberpass = criteriapass.from(Regdata.class);

		criteriapass.select(memberpass).where(cbpass.equal(memberpass.get("passwd"), pass));

		try {
			if (em.createQuery(criteriapass).getSingleResult() != null
					&& em.createQuery(criterialog).getSingleResult() != null) {
				loggeduser.setLogin(login);
				loggeduser.setPasswd(pass);

				return true;
			}
		} catch (Exception e) {
			return false;
		}
		return false;

	}
}
