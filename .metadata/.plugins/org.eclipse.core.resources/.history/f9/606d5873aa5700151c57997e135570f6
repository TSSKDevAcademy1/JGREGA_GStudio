package controlers;

package controlers;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.enterprise.context.ApplicationScoped;
import javax.enterprise.context.RequestScoped;
import javax.enterprise.context.SessionScoped;
import javax.enterprise.inject.Model;
import javax.enterprise.inject.Produces;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Inject;
import javax.inject.Named;

import models.Comments;
import models.LoggedUser;
import models.Regdata;
import models.Score;
import services.CommentsBean;
import services.LoginValidate;
import services.RegistrationBean;
import services.ScoreBean;
import sweeper.Field;

@Model
public class CommentsControler {

	@Inject
	private FacesContext facesContext;

	@Inject
	private CommentsBean commentsBean;

	@Inject
	private LoginValidate validate;

	@Produces
	@Named
	private Comments comments;

	@Inject
	private LoggedUser loggeduser;

	@PostConstruct
	public void initNewRegistration() {
		comments = new Comments();
	}

	public void register() throws Exception {
//		System.out.println("toto dava:" + regData.getLogin() + "");
		if (loggeduser.getLogin() != null) {
			try {
				commentsBean.register(comments);
				FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_INFO, "Comment is inputed!",
						"Thanks for Comment");
				facesContext.addMessage(null, m);
				initNewRegistration();
			} catch (Exception e) {
				String errorMessage = getRootErrorMessage(e);
				FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_ERROR, errorMessage,
						"Something wrong with registration!");
				facesContext.addMessage(null, m);
			}
		} else {
			FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_INFO, "WARM: Someone already use this LOGIN name",
					"Insert new other LOGIN name");
			facesContext.addMessage(null, m);
		}
	}

	// LOG IN
	public void logIn() {
		System.out.println(regData.getLogin());
		String loginIs = regData.getLogin();
		String passIs = regData.getPasswd();
		if (validate.isRegistered(loginIs, passIs)) {
			FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_INFO, "SingIn Done!", "Thanks for SingIn");
			facesContext.addMessage(null, m);
		} else {
			FacesMessage m = new FacesMessage(FacesMessage.SEVERITY_ERROR, "You are not logged",
					"You must be logged to add Coment to this Game!");
		}
	}

	public void logOut() {
		loggeduser.setLogin(null);
	}

	public String LogDisplay() {
		String inUser = "aa";
		if (loggeduser.getLogin() == null) {
			inUser = "none";
		} else {
			inUser = loggeduser.getLogin();
		}
		return inUser;
	}

	private String getRootErrorMessage(Exception e) {
		// Default to general error message that registration failed.
		String errorMessage = "Sending comment failed";
		if (e == null) {
			// This shouldn't happen, but return the default messages
			return errorMessage;
		}

		// Start with the exception and recurse to find the root cause
		Throwable t = e;
		while (t != null) {
			// Get the message from the Throwable class instance
			errorMessage = t.getLocalizedMessage();
			t = t.getCause();
		}
		// This is the root cause message
		return errorMessage;
	}

}
